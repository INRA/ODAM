{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"ODAM: Deployment and User's Guide # ODAM (Open Data for Access and Mining) is an Experiment Data Table Management System (EDTMS) ODAM (Open Data for Access and Mining) is an Experimental Data Table Management System (EDTMS) that implements a simple and effective way to make research data widely accessible and fully available for reuse, and this with minimal effort on the part of the data provider, and allows any scientist or data researcher to be able to explore the dataset and then extract some or all of the data according to their needs. For full documentation read the ODAM - Deployment and User's Guide","title":"Home"},{"location":"#odam-deployment-and-users-guide","text":"ODAM (Open Data for Access and Mining) is an Experiment Data Table Management System (EDTMS) ODAM (Open Data for Access and Mining) is an Experimental Data Table Management System (EDTMS) that implements a simple and effective way to make research data widely accessible and fully available for reuse, and this with minimal effort on the part of the data provider, and allows any scientist or data researcher to be able to explore the dataset and then extract some or all of the data according to their needs. For full documentation read the ODAM - Deployment and User's Guide","title":"ODAM: Deployment and User's Guide"},{"location":"about/","text":"ODAM: Deployment and User's Guide # (C) Daniel Jacob - INRAE UMR 1332 BFP, PMB - 2020 - Version 1.1 Set of tools and protocols implemented in this work Description Type Link Data Preparation Protocol for ODAM Compliance Documentation doi:10.17504/protocols.io.betcjeiw API Documentation based on Swagger Web API Tool INRA-PMB/ODAM/1.0.1-oas3/ R ODAM package and How to use it Package https://cran.r-project.org/package=Rodam R ODAM package Vignette Package Rodam/vignettes/Rodam.html Virtual Machine embedding the ODAM software on Oracle VM VirtualBox along with its installation guide Virtual Machine + Documentation https://doi.org/10.15454/C9LAEF Docker containers on DockerHub for installing on a Linux machine Container https://hub.docker.com/r/odam/getdata/ https://hub.docker.com/r/odam/dataexplorer/ A very lightweight local web server for Windows to deploy the ODAM API Web API Tool http://pmb-bordeaux.fr/odam/ODAMwebserver/ Examples of Jupyter notebooks (R & Python) based on the ODAM Web API Notebook https://github.com/djacob65/binder_odam https://doi.org/10.24433/CO.8981049.v1 https://doi.org/10.24433/CO.0011270.v1 Modeling the growth of tomato fruits based on enzyme activity profiles (Example of data analysis interfaced by ODAM) Notebook https://hal.inrae.fr/hal-02611223 ODAM Source code on GitHub Source Code https://github.com/inrae/ODAM JSON Schema for ODAM data package Source Code https://github.com/djacob65/odam-datapackage/","title":"About"},{"location":"about/#odam-deployment-and-users-guide","text":"(C) Daniel Jacob - INRAE UMR 1332 BFP, PMB - 2020 - Version 1.1 Set of tools and protocols implemented in this work Description Type Link Data Preparation Protocol for ODAM Compliance Documentation doi:10.17504/protocols.io.betcjeiw API Documentation based on Swagger Web API Tool INRA-PMB/ODAM/1.0.1-oas3/ R ODAM package and How to use it Package https://cran.r-project.org/package=Rodam R ODAM package Vignette Package Rodam/vignettes/Rodam.html Virtual Machine embedding the ODAM software on Oracle VM VirtualBox along with its installation guide Virtual Machine + Documentation https://doi.org/10.15454/C9LAEF Docker containers on DockerHub for installing on a Linux machine Container https://hub.docker.com/r/odam/getdata/ https://hub.docker.com/r/odam/dataexplorer/ A very lightweight local web server for Windows to deploy the ODAM API Web API Tool http://pmb-bordeaux.fr/odam/ODAMwebserver/ Examples of Jupyter notebooks (R & Python) based on the ODAM Web API Notebook https://github.com/djacob65/binder_odam https://doi.org/10.24433/CO.8981049.v1 https://doi.org/10.24433/CO.0011270.v1 Modeling the growth of tomato fruits based on enzyme activity profiles (Example of data analysis interfaced by ODAM) Notebook https://hal.inrae.fr/hal-02611223 ODAM Source code on GitHub Source Code https://github.com/inrae/ODAM JSON Schema for ODAM data package Source Code https://github.com/djacob65/odam-datapackage/","title":"ODAM: Deployment and User's Guide"},{"location":"getting_started/","text":"ODAM: Deployment and User's Guide # ODAM (Open Data for Access and Mining) is an Experiment Data Table Management System (EDTMS) Background # When generating data in an experiment involving several types of data from several analytical techniques, and this for the same samples, the task of being able to easily link these different data on the basis of sample identifiers is crucial. This is because the consistency of the data must be ensured throughout the experiment, so that it becomes unnecessary for each member to conduct a laborious investigation to find out who has the correct identifiers. Each time we plan to share data coming from a common experimental design, the classical challenges for fast using data by every partner are data storage and data access. We propose an approach for sharing project data all along its development phase, from the setup of the experimental schema up to the data acquisition from the various analyzes of samples, so that all data is readily available as soon as they are generated. Proposed solution # ODAM software is designed to manage experimental data tables in a quick and easy way for users. There is no need to develop a complex data model. Just complete the data with some structural metadata. These structural metadata will be used first to make full use of the data as soon as they are produced and formatted and then to annotate the dataset for later dissemination, either to project partners or more widely. The core idea in one shot The central idea which has been the founding idea of ODAM, is that data producers \"just\" have to drag and drop their data tables onto a storage space, which depending on the chosen infrastructure can be local (i.e. their PC, or a NAS) or remote (virtual disk space). So simply dropping data files (along with two additional metadata files) on the storage space allows users to access them through web services. This means there is no need for additional configuration on the server. ODAM proposes to meet certain needs typically encountered during the implementation of an experimental design in life science including several different analyses of the same sample. ODAM sofware suite allows experimental data tables to be widely accessible and fully reusable and this with minimal effort on the part of the data provider. Easily structure your data by adding structural metadata so that you can first exploit it locally yourself, before sharing it more widely just as easily. make research data locally or broadly accessible all along the project allow data to be selected then, downloadable by web API allow data and analysis to be visualized online Based on the following criteria: Centrally manage identifiers (plants, harvests, samples, ...) so that they are unique and shared by all Avoid the implementation of a complex data management system (requiring a data model) given that many changes can occur during the project. (possibility of new analysis, new measures or give up some others, ...) Facilitates the subsequent publication of data: either the data can serve to fill in an existing database or the data can be broadcast through a web-service approach with the associated metadata. For this work, we made the choice to keep the good old way of scientist to use worksheets, thus using the same tool for both data files and metadata definition files. The ODAM software can be deployed at multiple scales (local, intranet, internet), depending on the need and the target community. Guideline keywords : simplicity, flexibility, efficiency Give an open access to your data and make them ready to be mined - A data explorer as bonus : Test online with the FRIM dataset Documentation # Presentation : A presentation on the ODAM software, its aims and what can we do with it for what purposes. FAIR_and_DataLife_DJ_Oct2019.pdf Presentation : Part 1: How to best manage your data to make the most of it for your research Make your data great now Presentation : Part 2: How to ensure that open data works for research - Towards Linked Data Make your data great again Document : ODAM: Deployment and User's Guide ODAM - Deployment and User's Guide Document : Data Preparation Protocol for ODAM Compliance. protocols.io doi:10.17504/protocols.io.betcjeiw Document :How to install a VM embedding the ODAM software on Oracle VM VirtualBox doi:10.15454/C9LAEF , Portail Data INRAE, V1","title":"Getting started"},{"location":"getting_started/#odam-deployment-and-users-guide","text":"ODAM (Open Data for Access and Mining) is an Experiment Data Table Management System (EDTMS)","title":"ODAM: Deployment and User's Guide"},{"location":"getting_started/#background","text":"When generating data in an experiment involving several types of data from several analytical techniques, and this for the same samples, the task of being able to easily link these different data on the basis of sample identifiers is crucial. This is because the consistency of the data must be ensured throughout the experiment, so that it becomes unnecessary for each member to conduct a laborious investigation to find out who has the correct identifiers. Each time we plan to share data coming from a common experimental design, the classical challenges for fast using data by every partner are data storage and data access. We propose an approach for sharing project data all along its development phase, from the setup of the experimental schema up to the data acquisition from the various analyzes of samples, so that all data is readily available as soon as they are generated.","title":"Background"},{"location":"getting_started/#proposed-solution","text":"ODAM software is designed to manage experimental data tables in a quick and easy way for users. There is no need to develop a complex data model. Just complete the data with some structural metadata. These structural metadata will be used first to make full use of the data as soon as they are produced and formatted and then to annotate the dataset for later dissemination, either to project partners or more widely. The core idea in one shot The central idea which has been the founding idea of ODAM, is that data producers \"just\" have to drag and drop their data tables onto a storage space, which depending on the chosen infrastructure can be local (i.e. their PC, or a NAS) or remote (virtual disk space). So simply dropping data files (along with two additional metadata files) on the storage space allows users to access them through web services. This means there is no need for additional configuration on the server. ODAM proposes to meet certain needs typically encountered during the implementation of an experimental design in life science including several different analyses of the same sample. ODAM sofware suite allows experimental data tables to be widely accessible and fully reusable and this with minimal effort on the part of the data provider. Easily structure your data by adding structural metadata so that you can first exploit it locally yourself, before sharing it more widely just as easily. make research data locally or broadly accessible all along the project allow data to be selected then, downloadable by web API allow data and analysis to be visualized online Based on the following criteria: Centrally manage identifiers (plants, harvests, samples, ...) so that they are unique and shared by all Avoid the implementation of a complex data management system (requiring a data model) given that many changes can occur during the project. (possibility of new analysis, new measures or give up some others, ...) Facilitates the subsequent publication of data: either the data can serve to fill in an existing database or the data can be broadcast through a web-service approach with the associated metadata. For this work, we made the choice to keep the good old way of scientist to use worksheets, thus using the same tool for both data files and metadata definition files. The ODAM software can be deployed at multiple scales (local, intranet, internet), depending on the need and the target community. Guideline keywords : simplicity, flexibility, efficiency Give an open access to your data and make them ready to be mined - A data explorer as bonus : Test online with the FRIM dataset","title":"Proposed solution"},{"location":"getting_started/#documentation","text":"Presentation : A presentation on the ODAM software, its aims and what can we do with it for what purposes. FAIR_and_DataLife_DJ_Oct2019.pdf Presentation : Part 1: How to best manage your data to make the most of it for your research Make your data great now Presentation : Part 2: How to ensure that open data works for research - Towards Linked Data Make your data great again Document : ODAM: Deployment and User's Guide ODAM - Deployment and User's Guide Document : Data Preparation Protocol for ODAM Compliance. protocols.io doi:10.17504/protocols.io.betcjeiw Document :How to install a VM embedding the ODAM software on Oracle VM VirtualBox doi:10.15454/C9LAEF , Portail Data INRAE, V1","title":"Documentation"},{"location":"json-schema/","text":"ODAM: Deployment and User's Guide # ODAM data-package based on JSON-Schema # A data package is a simple container format used to describe and package a collection of data. Defining an explicit schema for structural metadata allows machines to better interpret the data for reuse. Thus, when disseminating data, a file named \u00e2\u20ac\u02dcdatapackage.json\u00e2\u20ac\u2122 by convention can be added to the collection of your data files. This \u00e2\u20ac\u02dcdatapackage.json\u00e2\u20ac\u2122 file contains all structural metadata along with unambiguous definitions of all internal elements (e.g. column definitions, units of measurement), through links to accessible (standard) definitions. ODAM data package schema is very close to the 'Frictionless Data' framework. odam-data-package.json : JSON Schema for ODAM data package odam-data-resource.json : JSON Schema for ODAM data resource The datapackage.json file can be generated directly from the ODAM API by specifying '/datapackage' at the end of the request. By default, the reference to the data files is relative. To have a URL as reference for the data files, it is necessary to add at the end of the request '?links=1' ODAM data-package on github https://github.com/djacob65/odam-datapackage Frictionless Data Specifications http://specs.frictionlessdata.io/ https://github.com/frictionlessdata/specs/tree/master/schemas json_validate: Validate a json file https://rdrr.io/cran/jsonvalidate/man/json_validate.html Example of a session under R using a data package # library ( httr ) library ( jsonvalidate ) library ( jsonlite ) # Get the ODAM data package schema response <- GET ( 'https://inrae.github.io/ODAM/json-schema/odam-data-package.json' , config ( sslversion = 6 , ssl_verifypeer = 1 )) schema <- rawToChar ( response $ content ) # Get structural metadata information in datapackage format (json) # for the 'frim1' dataset directly from an ODAM repository # (located on https://pmb-bordeaux.fr) # As the option links is set to 1, we will have the absolute reference # for data files (see below) response <- GET ( 'https://pmb-bordeaux.fr/getdata/json/frim1/datapackage?links=1' , config ( sslversion = 6 , ssl_verifypeer = 1 )) json <- rawToChar ( response $ content ) # Validate the JSON against the ODAM data package schema jsonvalidate :: json_validate ( json , schema ) [1] TRUE Code # Parse the JSON object to a data.frame metadata <- fromJSON ( json ) # List some metadata about the dataset metadata $ resources[ c ( \"name\" , \"title\" , \"identifier\" , \"obtainedFrom\" , \"joinkey\" ) ] Output name title identifier obtainedFrom joinkey 1 plants Plant features PlantID <NA> <NA> 2 samples Sample features SampleID plants PlantID 3 aliquots Aliquots features AliquotID samples SampleID 4 cellwall_metabo Cell wall Compound quantifications AliquotID aliquots AliquotID 5 cellwall_metaboFW Cell Wall Compound quantifications (FW) AliquotID aliquots AliquotID 6 activome Activome Features AliquotID aliquots AliquotID 7 pools Pools of remaining pools PoolID samples SampleID 8 qMS_metabo MS Compounds quantification PoolID pools PoolID 9 qNMR_metabo NMR Compounds quantification PoolID pools PoolID 10 plato_hexosesP Hexoses Phosphate AliquotID aliquots AliquotID 11 lipids_AG Lipids AG AliquotID aliquots AliquotID 12 AminoAcid Amino Acids AliquotID aliquots AliquotID Code # List the absolute reference for data files metadata $ resources[ \"path\" ] Output path 1 https://pmb-bordeaux.fr/getdata/tsv/frim1/plants 2 https://pmb-bordeaux.fr/getdata/tsv/frim1/samples 3 https://pmb-bordeaux.fr/getdata/tsv/frim1/aliquots 4 https://pmb-bordeaux.fr/getdata/tsv/frim1/cellwall_metabo 5 https://pmb-bordeaux.fr/getdata/tsv/frim1/cellwall_metaboFW 6 https://pmb-bordeaux.fr/getdata/tsv/frim1/activome 7 https://pmb-bordeaux.fr/getdata/tsv/frim1/pools 8 https://pmb-bordeaux.fr/getdata/tsv/frim1/qMS_metabo 9 https://pmb-bordeaux.fr/getdata/tsv/frim1/qNMR_metabo 10 https://pmb-bordeaux.fr/getdata/tsv/frim1/plato_hexosesP 11 https://pmb-bordeaux.fr/getdata/tsv/frim1/lipids_AG 12 https://pmb-bordeaux.fr/getdata/tsv/frim1/AminoAcid Code # Read the 'samples' data file - index=2 index <- 2 M <- read.table ( url ( metadata $ resources[ \"path\" ] $ path[index] ), header = metadata $ resources $ dialect $ header[index] , sep = metadata $ resources $ dialect $ delimiter[index] ) # Display an extract M[1 : 10 , ] Output SampleID PlantID Truss DevStage FruitAge HarvestDate HarvestHour FruitPosition FruitDiameter FruitHeight FruitFW FruitDW DW 1 1 A26 T5 FF.01 08DPA 40379 0.5 2 NA NA 0.72 0.090216 NA 2 1 C2 T5 FF.01 08DPA 40379 0.5 3 NA NA 0.56 0.070168 NA 3 1 D15 T5 FF.01 08DPA 40379 0.5 4 NA NA 0.78 0.097734 NA 4 1 E19 T5 FF.01 08DPA 40379 0.5 4 NA NA 0.66 0.082698 NA 5 1 E34 T5 FF.01 08DPA 40379 0.5 3 NA NA 0.7 0.087710 NA 6 1 E38 T5 FF.01 08DPA 40379 0.5 3 NA NA 0.7 0.087710 NA 7 1 H29 T5 FF.01 08DPA 40379 0.5 5 NA NA 1.24 0.155372 NA 8 1 H34 T5 FF.01 08DPA 40379 0.5 4 NA NA 0.86 0.107758 NA 9 1 H52 T5 FF.01 08DPA 40379 0.5 5 NA NA 0.77 0.096481 NA 10 1 H61 T5 FF.01 08DPA 40379 0.5 5 NA NA 0.56 0.070168 NA Code # Get the list of data subsets that were obtained from the 'samples' index <- 2 subsets <- metadata $ resources $ schema $ foreignKey[[index]] $ reference[ , 1 ] if ( ! is.null ( subsets ) ) metadata $ resources[ metadata $ resources $ name %in% subsets , c ( \"name\" , \"title\" , \"identifier\" , \"obtainedFrom\" ) ] Output name title identifier obtainedFrom 3 aliquots Aliquots features AliquotID samples 7 pools Pools of remaining pools PoolID samples Code # Get the list of data subsets that were obtained from the 'aliquots' index <- 3 subsets <- metadata $ resources $ schema $ foreignKey[[index]] $ reference[ , 1 ] if ( ! is.null ( subsets ) ) metadata $ resources[ metadata $ resources $ name %in% subsets , c ( \"name\" , \"title\" , \"identifier\" , \"obtainedFrom\" ) ] Output name title identifier obtainedFrom 4 cellwall_metabo Cell wall Compound quantifications AliquotID aliquots 5 cellwall_metaboFW Cell Wall Compound quantifications (FW) AliquotID aliquots 6 activome Activome Features AliquotID aliquots 10 plato_hexosesP Hexoses Phosphate AliquotID aliquots 11 lipids_AG Lipids AG AliquotID aliquots 12 AminoAcid Amino Acids AliquotID aliquots","title":"ODAM data-package based on JSON-Schema"},{"location":"json-schema/#odam-deployment-and-users-guide","text":"","title":"ODAM: Deployment and User's Guide"},{"location":"json-schema/#odam-data-package-based-on-json-schema","text":"A data package is a simple container format used to describe and package a collection of data. Defining an explicit schema for structural metadata allows machines to better interpret the data for reuse. Thus, when disseminating data, a file named \u00e2\u20ac\u02dcdatapackage.json\u00e2\u20ac\u2122 by convention can be added to the collection of your data files. This \u00e2\u20ac\u02dcdatapackage.json\u00e2\u20ac\u2122 file contains all structural metadata along with unambiguous definitions of all internal elements (e.g. column definitions, units of measurement), through links to accessible (standard) definitions. ODAM data package schema is very close to the 'Frictionless Data' framework. odam-data-package.json : JSON Schema for ODAM data package odam-data-resource.json : JSON Schema for ODAM data resource The datapackage.json file can be generated directly from the ODAM API by specifying '/datapackage' at the end of the request. By default, the reference to the data files is relative. To have a URL as reference for the data files, it is necessary to add at the end of the request '?links=1' ODAM data-package on github https://github.com/djacob65/odam-datapackage Frictionless Data Specifications http://specs.frictionlessdata.io/ https://github.com/frictionlessdata/specs/tree/master/schemas json_validate: Validate a json file https://rdrr.io/cran/jsonvalidate/man/json_validate.html","title":"ODAM data-package based on JSON-Schema"},{"location":"json-schema/#example-of-a-session-under-r-using-a-data-package","text":"library ( httr ) library ( jsonvalidate ) library ( jsonlite ) # Get the ODAM data package schema response <- GET ( 'https://inrae.github.io/ODAM/json-schema/odam-data-package.json' , config ( sslversion = 6 , ssl_verifypeer = 1 )) schema <- rawToChar ( response $ content ) # Get structural metadata information in datapackage format (json) # for the 'frim1' dataset directly from an ODAM repository # (located on https://pmb-bordeaux.fr) # As the option links is set to 1, we will have the absolute reference # for data files (see below) response <- GET ( 'https://pmb-bordeaux.fr/getdata/json/frim1/datapackage?links=1' , config ( sslversion = 6 , ssl_verifypeer = 1 )) json <- rawToChar ( response $ content ) # Validate the JSON against the ODAM data package schema jsonvalidate :: json_validate ( json , schema ) [1] TRUE Code # Parse the JSON object to a data.frame metadata <- fromJSON ( json ) # List some metadata about the dataset metadata $ resources[ c ( \"name\" , \"title\" , \"identifier\" , \"obtainedFrom\" , \"joinkey\" ) ] Output name title identifier obtainedFrom joinkey 1 plants Plant features PlantID <NA> <NA> 2 samples Sample features SampleID plants PlantID 3 aliquots Aliquots features AliquotID samples SampleID 4 cellwall_metabo Cell wall Compound quantifications AliquotID aliquots AliquotID 5 cellwall_metaboFW Cell Wall Compound quantifications (FW) AliquotID aliquots AliquotID 6 activome Activome Features AliquotID aliquots AliquotID 7 pools Pools of remaining pools PoolID samples SampleID 8 qMS_metabo MS Compounds quantification PoolID pools PoolID 9 qNMR_metabo NMR Compounds quantification PoolID pools PoolID 10 plato_hexosesP Hexoses Phosphate AliquotID aliquots AliquotID 11 lipids_AG Lipids AG AliquotID aliquots AliquotID 12 AminoAcid Amino Acids AliquotID aliquots AliquotID Code # List the absolute reference for data files metadata $ resources[ \"path\" ] Output path 1 https://pmb-bordeaux.fr/getdata/tsv/frim1/plants 2 https://pmb-bordeaux.fr/getdata/tsv/frim1/samples 3 https://pmb-bordeaux.fr/getdata/tsv/frim1/aliquots 4 https://pmb-bordeaux.fr/getdata/tsv/frim1/cellwall_metabo 5 https://pmb-bordeaux.fr/getdata/tsv/frim1/cellwall_metaboFW 6 https://pmb-bordeaux.fr/getdata/tsv/frim1/activome 7 https://pmb-bordeaux.fr/getdata/tsv/frim1/pools 8 https://pmb-bordeaux.fr/getdata/tsv/frim1/qMS_metabo 9 https://pmb-bordeaux.fr/getdata/tsv/frim1/qNMR_metabo 10 https://pmb-bordeaux.fr/getdata/tsv/frim1/plato_hexosesP 11 https://pmb-bordeaux.fr/getdata/tsv/frim1/lipids_AG 12 https://pmb-bordeaux.fr/getdata/tsv/frim1/AminoAcid Code # Read the 'samples' data file - index=2 index <- 2 M <- read.table ( url ( metadata $ resources[ \"path\" ] $ path[index] ), header = metadata $ resources $ dialect $ header[index] , sep = metadata $ resources $ dialect $ delimiter[index] ) # Display an extract M[1 : 10 , ] Output SampleID PlantID Truss DevStage FruitAge HarvestDate HarvestHour FruitPosition FruitDiameter FruitHeight FruitFW FruitDW DW 1 1 A26 T5 FF.01 08DPA 40379 0.5 2 NA NA 0.72 0.090216 NA 2 1 C2 T5 FF.01 08DPA 40379 0.5 3 NA NA 0.56 0.070168 NA 3 1 D15 T5 FF.01 08DPA 40379 0.5 4 NA NA 0.78 0.097734 NA 4 1 E19 T5 FF.01 08DPA 40379 0.5 4 NA NA 0.66 0.082698 NA 5 1 E34 T5 FF.01 08DPA 40379 0.5 3 NA NA 0.7 0.087710 NA 6 1 E38 T5 FF.01 08DPA 40379 0.5 3 NA NA 0.7 0.087710 NA 7 1 H29 T5 FF.01 08DPA 40379 0.5 5 NA NA 1.24 0.155372 NA 8 1 H34 T5 FF.01 08DPA 40379 0.5 4 NA NA 0.86 0.107758 NA 9 1 H52 T5 FF.01 08DPA 40379 0.5 5 NA NA 0.77 0.096481 NA 10 1 H61 T5 FF.01 08DPA 40379 0.5 5 NA NA 0.56 0.070168 NA Code # Get the list of data subsets that were obtained from the 'samples' index <- 2 subsets <- metadata $ resources $ schema $ foreignKey[[index]] $ reference[ , 1 ] if ( ! is.null ( subsets ) ) metadata $ resources[ metadata $ resources $ name %in% subsets , c ( \"name\" , \"title\" , \"identifier\" , \"obtainedFrom\" ) ] Output name title identifier obtainedFrom 3 aliquots Aliquots features AliquotID samples 7 pools Pools of remaining pools PoolID samples Code # Get the list of data subsets that were obtained from the 'aliquots' index <- 3 subsets <- metadata $ resources $ schema $ foreignKey[[index]] $ reference[ , 1 ] if ( ! is.null ( subsets ) ) metadata $ resources[ metadata $ resources $ name %in% subsets , c ( \"name\" , \"title\" , \"identifier\" , \"obtainedFrom\" ) ] Output name title identifier obtainedFrom 4 cellwall_metabo Cell wall Compound quantifications AliquotID aliquots 5 cellwall_metaboFW Cell Wall Compound quantifications (FW) AliquotID aliquots 6 activome Activome Features AliquotID aliquots 10 plato_hexosesP Hexoses Phosphate AliquotID aliquots 11 lipids_AG Lipids AG AliquotID aliquots 12 AminoAcid Amino Acids AliquotID aliquots","title":"Example of a session under R using a data package"},{"location":"tests/","text":"ODAM: Deployment and User's Guide # First Header Second Header Third Header Left Center Right Left Center Right","title":"My Document"},{"location":"tests/#odam-deployment-and-users-guide","text":"First Header Second Header Third Header Left Center Right Left Center Right","title":"ODAM: Deployment and User's Guide"}]}